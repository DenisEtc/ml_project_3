services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ml_app
    env_file: .env
    environment:
      PYTHONPATH: /app
    volumes:
      - ./app:/app/app
      - ./shared:/app/shared
    ports:
      - "8000:8000"
    depends_on:
      - database
      - rabbitmq

  web-proxy:
    image: nginx:latest
    container_name: ml_nginx
    depends_on:
      - app
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf

  rabbitmq:
    image: rabbitmq:3-management
    container_name: ml_rabbit
    restart: on-failure
    ports:
      - "15672:15672"
      - "5672:5672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq

  database:
    image: postgres:14
    container_name: ml_postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ml_service
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  worker1:
    build:
      context: ./worker
      dockerfile: Dockerfile
    container_name: worker1
    env_file: .env
    volumes:
      - ./worker:/worker/worker
      - ./shared:/worker/shared
    depends_on:
      - rabbitmq
      - database

  worker2:
    build:
      context: ./worker
      dockerfile: Dockerfile
    container_name: worker2
    env_file: .env
    volumes:
      - ./worker:/worker/worker
      - ./shared:/worker/shared
    depends_on:
      - rabbitmq
      - database

  worker3:
    build:
      context: ./worker
      dockerfile: Dockerfile
    container_name: worker3
    env_file: .env
    volumes:
      - ./worker:/worker/worker
      - ./shared:/worker/shared
    depends_on:
      - rabbitmq
      - database

  worker4:
    build:
      context: ./worker
      dockerfile: Dockerfile
    container_name: worker4
    env_file: .env
    volumes:
      - ./worker:/worker/worker
      - ./shared:/worker/shared
    depends_on:
      - rabbitmq
      - database

volumes:
  rabbitmq_data:
  postgres_data:
